#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

DOTNET_SDK_VERSION="1.0.4"
DOTNET_RUNTIME_VERSION="1.1.0"
LIBUNWIND_VERSION="1.1-4.1"

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
DEPLOYMENT_FILE_LOCATION=${BUILD_DIR}/.deployment

# Apt directory
mkdir -p ${BUILD_DIR}/.apt

# Download and install dependencies
# libunwind
LIBUNWIND_DEB_DIR=${CACHE_DIR}/deb/libunwind/${LIBUNWIND_VERSION}
if [ ! -f ${LIBUNWIND_DEB_DIR}/libunwind.deb ]; then
  rm -rf ${CACHE_DIR}/deb/libunwind/* || true
  mkdir -p ${LIBUNWIND_DEB_DIR}
  echo "Downloading libunwind version ${LIBUNWIND_VERSION}"
  curl -o ${LIBUNWIND_DEB_DIR}/libunwind.deb -sSL https://mirrors.kernel.org/ubuntu/pool/main/libu/libunwind/libunwind8_${LIBUNWIND_VERSION}_amd64.deb
fi
dpkg -x ${LIBUNWIND_DEB_DIR}/libunwind.deb $BUILD_DIR/.apt/
export LD_LIBRARY_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH"

export LD_LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$LD_LIBRARY_PATH"

# Install dotnet
DOTNET_CACHE_LOCATION=${CACHE_DIR}/dotnet/${DOTNET_SDK_VERSION}

if [ ! -d ${DOTNET_CACHE_LOCATION} ]; then
  rm -rf ${CACHE_DIR}/dotnet/* || true
  mkdir -p ${DOTNET_CACHE_LOCATION}/{sdk,runtime}

  echo "Downloading .NET SDK version ${DOTNET_SDK_VERSION} and runtime version ${DOTNET_RUNTIME_VERSION}"

  DOTNET_SDK_DOWNLOAD_URL=https://dotnetcli.blob.core.windows.net/dotnet/preview/Binaries/$DOTNET_SDK_VERSION/dotnet-dev-ubuntu-x64.$DOTNET_SDK_VERSION.tar.gz
  curl -sSL ${DOTNET_SDK_DOWNLOAD_URL} | tar xz -C ${DOTNET_CACHE_LOCATION}/sdk
  find ${DOTNET_CACHE_LOCATION}/sdk/sdk/${DOTNET_SDK_VERSION}/runtimes/* -maxdepth 0 ! -name unix -exec rm -r {} +
  rm -f ${DOTNET_CACHE_LOCATION}/sdk/sdk/${DOTNET_SDK_VERSION}/nuGetPackagesArchive.lzma

  DOTNET_RUNTIME_DOWNLOAD_URL=http://download.microsoft.com/download/A/F/6/AF610E6A-1D2D-47D8-80B8-F178951A0C72/Binaries/dotnet-ubuntu-x64.${DOTNET_RUNTIME_VERSION}.tar.gz
  curl -sSL ${DOTNET_RUNTIME_DOWNLOAD_URL} | tar xz -C ${DOTNET_CACHE_LOCATION}/runtime
fi

export PATH="${DOTNET_CACHE_LOCATION}/sdk:$PATH"
cp -r ${DOTNET_CACHE_LOCATION}/runtime ${BUILD_DIR}/dotnet

export PATH="\$HOME/dotnet:\$PATH"

# Determine csproj location
if [ -e ${DEPLOYMENT_FILE_LOCATION} ]; then
  PROJECT_DIR=$BUILD_DIR/$(awk -F "=" '/project/ {print $2}' ${DEPLOYMENT_FILE_LOCATION} | tr -d ' ')
  CSPROJ_FILE=$(find $PROJECT_DIR -maxdepth 3 -iname "*.csproj")
	echo "Project file configured in .deployment file"
fi

# Compile and publish
cd $BUILD_DIR/$PROJECT_DIR
dotnet restore
dotnet publish ${CSPROJ_FILE} --output ${BUILD_DIR} $DNU_FLAGS --runtime ubuntu.16.04-x64 --configuration Release
