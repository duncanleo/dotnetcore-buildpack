#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

DOTNET_SDK_VERSION="1.0.4"
DOTNET_RUNTIME_VERSION="1.1.0"
LIBUNWIND_VERSION="1.1-4.1"

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
DEPLOYMENT_FILE_LOCATION=${BUILD_DIR}/.deployment

# Apt directory
mkdir -p ${BUILD_DIR}/.apt

# Download dependencies
APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_DIR_ETC="$CACHE_DIR/apt/dir_etc"

mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"
mkdir -p $APT_DIR_ETC

mkdir -p $BUILD_DIR/.apt

# Set up temp APT directory
cp -Rf /etc/apt/ $APT_DIR_ETC

APT_OPTIONS="-o debug::nolocking=true -o dir::etc=$APT_DIR_ETC -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"

apt $APT_OPTIONS update

# libunwind
apt $APT_OPTIONS -y --force-yes -d install --reinstall libunwind8

export LD_LIBRARY_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH"
export LD_LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$LD_LIBRARY_PATH"

# Download dotnet
sh -c 'echo "deb [arch=amd64] https://apt-mo.trafficmanager.net/repos/dotnet-release/ xenial main" > $APT_DIR_ETC/sources.list.d/dotnetdev.list'
apt-key $APT_OPTIONS adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 417A0893
apt $APT_OPTIONS update
apt $APT_OPTIONS -y --force-yes -d install --reinstall dotnet-dev-1.0.4

# Install everything
for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  echo "Installing $(basename $DEB)"
  dpkg -x $DEB $BUILD_DIR/.apt/
done

export PATH="\$HOME/dotnet:\$PATH"

# Determine csproj location
if [ -e ${DEPLOYMENT_FILE_LOCATION} ]; then
  PROJECT_DIR=$BUILD_DIR/$(awk -F "=" '/project/ {print $2}' ${DEPLOYMENT_FILE_LOCATION} | tr -d ' ')
  CSPROJ_FILE=$(find $PROJECT_DIR -maxdepth 3 -iname "*.csproj")
	echo "Project file configured in .deployment file"
fi

# Compile and publish
cd $BUILD_DIR/$PROJECT_DIR
dotnet restore
dotnet publish ${CSPROJ_FILE} --output ${BUILD_DIR} $DNU_FLAGS --runtime ubuntu.16.04-x64 --configuration Release
